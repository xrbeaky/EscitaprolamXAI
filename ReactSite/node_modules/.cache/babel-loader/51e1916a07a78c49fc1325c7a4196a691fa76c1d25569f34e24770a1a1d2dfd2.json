{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xrbea\\\\OneDrive\\\\Desktop\\\\react-test\\\\src\\\\Components\\\\Input.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet formResponses = [];\nexport default function Input() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"main-h3\",\n        children: \"This questionnaire is designed to be completed alongside a clinician. For each of the following, select the scale that best represents the patient's feelings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        index: \"1\",\n        question: \"Depressed Mood (sadness, hopeless, helpless, worthless)\",\n        answers: [\"Absent\", \"These feeling states indicated only on questioning.\", \"These feeling states spontaneously reported verbally.\", \"Communicates feeling states non-verbally, i.e. through facial expression, posture, voice, and tendency to weep.\", \"Patient reports virtually only these feeling states in his/her spontaneous verbal and non-verbal communication.\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        index: \"2\",\n        question: \"Feelings of Guilt\",\n        answers: [\"Absent\", \"Self reproach, feels he/she has let people down.\", \"Ideas of guilt or rumination over past errors or sinful deeds.\", \"Present illness is a punishment. Delusions of guilt.\", \"Hears accusatory or denunciatory voices and/or experiences threatening visual hallucinatons.\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        index: \"3\",\n        question: \"Suicide\",\n        answers: [\"Absent\", \"Feels life is not worth living.\", \"Wishes they were dead or any thoughts of possible death to self.\", \"Ideas or gestures of suicide.\", \"Attemps at suicide (any serious attempt rate 4).\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\nfunction Question(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [props.index, \". \", props.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-list\",\n      children: /*#__PURE__*/_jsxDEV(UserInput, {\n        index: props.index,\n        answers: props.answers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Question;\nfunction UserInput(props) {\n  const handleClick = (event, i) => {\n    const clickedButton = event.target;\n    formResponses[props.index - 1] = i;\n    console.log(formResponses);\n    const buttonsInGroup = Array.from(clickedButton.parentNode.parentNode.querySelectorAll(\"button\"));\n    buttonsInGroup.forEach(button => {\n      console.log(\"Button found!\");\n      if (button !== clickedButton) {\n        button.classList.remove('form-button-selected');\n        button.classList.add('form-button-unselected');\n      } else {\n        button.classList.remove('form-button-unselected');\n        button.classList.add('form-button-selected');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: props.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button-unselected\",\n        onClick: event => {\n          handleClick(event, i);\n        },\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_c3 = UserInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Question\");\n$RefreshReg$(_c3, \"UserInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","formResponses","Input","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Question","index","question","answers","_c","props","UserInput","_c2","handleClick","event","i","clickedButton","target","console","log","buttonsInGroup","Array","from","parentNode","querySelectorAll","forEach","button","classList","remove","add","map","answer","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/xrbea/OneDrive/Desktop/react-test/src/Components/Input.js"],"sourcesContent":["import React from 'react';\r\n\r\nlet formResponses = [];\r\n\r\nexport default function Input(){\r\n    return(\r\n        <main>\r\n            <h1 className = \"main-title\">Input</h1>\r\n            <ul className = \"main-container\">\r\n                <h3 className = \"main-h3\">This questionnaire is designed to be completed alongside a clinician. For each of the following, select the scale that best represents the patient's feelings:</h3>\r\n                <Question \r\n                index = \"1\" \r\n                question = \"Depressed Mood (sadness, hopeless, helpless, worthless)\"\r\n                answers = {[\"Absent\", \"These feeling states indicated only on questioning.\", \"These feeling states spontaneously reported verbally.\", \"Communicates feeling states non-verbally, i.e. through facial expression, posture, voice, and tendency to weep.\", \"Patient reports virtually only these feeling states in his/her spontaneous verbal and non-verbal communication.\"]}/>\r\n                <Question \r\n                index = \"2\" \r\n                question = \"Feelings of Guilt\"\r\n                answers = {[\"Absent\", \"Self reproach, feels he/she has let people down.\", \"Ideas of guilt or rumination over past errors or sinful deeds.\", \"Present illness is a punishment. Delusions of guilt.\", \"Hears accusatory or denunciatory voices and/or experiences threatening visual hallucinatons.\"]}/>\r\n                <Question \r\n                index = \"3\" \r\n                question = \"Suicide\"\r\n                answers = {[\"Absent\", \"Feels life is not worth living.\", \"Wishes they were dead or any thoughts of possible death to self.\", \"Ideas or gestures of suicide.\", \"Attemps at suicide (any serious attempt rate 4).\"]}/>\r\n            </ul>\r\n        </main>\r\n    )\r\n}\r\n\r\nfunction Question(props)\r\n{\r\n    return(\r\n        <div>\r\n            <h2>{props.index}. {props.question}</h2>\r\n            <div className = \"input-list\">\r\n                <UserInput index = {props.index} answers = {props.answers}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction UserInput(props){\r\n    const handleClick = (event, i) =>{\r\n        const clickedButton = event.target;\r\n\r\n        formResponses[props.index - 1] = i\r\n        console.log(formResponses);\r\n\r\n        const buttonsInGroup = Array.from(clickedButton.parentNode.parentNode.querySelectorAll(\"button\"));\r\n        buttonsInGroup.forEach(button => {\r\n            console.log(\"Button found!\");\r\n            if (button !== clickedButton) {\r\n              button.classList.remove('form-button-selected');\r\n              button.classList.add('form-button-unselected');\r\n            }\r\n            else{\r\n                button.classList.remove('form-button-unselected');\r\n                button.classList.add('form-button-selected');\r\n            }\r\n          });\r\n\r\n          \r\n    }\r\n    return(\r\n        <div className = \"input-container\">\r\n            {\r\n                props.answers.map((answer, i) => (\r\n                    <div key = {i} className = \"button-container\">\r\n                        <button className = \"form-button-unselected\" onClick={(event) => {handleClick(event, i)}}>{i}</button>\r\n                        <h4>{answer}</h4>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}